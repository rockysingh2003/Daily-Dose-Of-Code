// User function template for C++
class Solution {
  public:
    string findSum(string a, string b)
    {
        int i = a.size()-1, j = b.size()-1, sum = 0, carry = 0;
        string ans="";
        while( i >= 0 && j >= 0 )
        {
            sum = carry + a[i]-'0' + b[j]-'0';
            ans += ((sum % 10) + ' 0');
            carry = sum / 10;
            i--;
            j--;
        }
        while(i >= 0)
        {
            sum = carry + a[i]-'0';
            ans += ((sum % 10) + ' 0');
            carry = sum / 10;
            i--;
        }
        while(j >= 0)
        {
            sum = carry +  b[j]-'0';
            ans += ((sum % 10) + ' 0');
            carry = sum / 10;
            j--;
        }
        if(carry)
            ans += (carry + '0');
        reverse(ans.begin(),ans.end());
        return ans;
    }
    bool help(string a, string b, string c)
    {
        string sum = findSum(a,b);
        int i = 0, j = 0;
        while(i < sum.size() && j < c.size())
        {
            if(sum[i] != c[j])
                return false;
            i++;
            j++;
        }
        if(i < sum.size())
            return false;
        if(i == c.size())
            return true;
        c = c.substr(j);
        return help(b,sum,c);
        
    }
    bool isAdditiveSequence(string n) 
    {
        int check = n.size()/2==0?(n.size()/2)-1: n.size()/2;
        for(int i = 0; i < check ; i++)
        {
            for(int j = i+1; j < n.size()-1; j++)
            {
                string a = n.substr(0,i+1);
                string b = n.substr(i+1,j-i);
                string c = n.substr(j+1);
                if(help(a,b,c))
                    return true;
            }
        }
        return false;
        // Your code here
    }
};
